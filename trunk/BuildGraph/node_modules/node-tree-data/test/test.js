var Tree = (typeof window === "undefined") ? require("..") : require("tree-data"),
    assert = require("assert");

describe("Tree", function() {

    var tree, node, node2;

    it("#new", function() {
        tree = new Tree();
    })

    it("#createNode", function(done) {
        tree.once("create", function(n) {
            setTimeout(function(){
                assert(node.id === n.id);
                done();
            },1)
        })
        node = tree.createNode("label1");
        assert(node.label === "label1");
    })

    it("#isRoot", function() {
        var bo = tree.isRoot(node.id);
        assert(bo);
    })

    it("#getNode", function() {
        var n = tree.getNode(node.id);
        assert(n.id === node.id);
    })

    it("#changeNodeLabel", function(done) {
        tree.once("change label", function(n) {
            setTimeout(function(){
                assert(n.label === "label2");
                done()
            },1)
        })
        tree.changeNodeLabel("label2", node.id);
        var n = tree.getNode(node.id);
        assert(n.label === "label2");
    })

    it("#setNodeData", function(done) {
        tree.once("change data", function(n) {
                
            assert(n.data.name === "leo");
            done();

        });
        tree.setNodeData({
            name: "leo"
        }, node.id);
    })

    it("#up", function(done) {
        node2 = tree.createNode("root2");
        tree.up(node2.id);
        var ns = tree.getChilds();
        assert(ns[0].label === "root2");
        setTimeout(function() {
            done()
        }, 10)
    })

    it("#down", function(done) {
        tree.down(node2.id);
        var ns = tree.getChilds();
        assert(ns[1].label === "root2");
        setTimeout(function() {
            done()
        }, 10)
    })

    it("#getRoute", function(done) {
        var node3 = tree.createNode("node3", node2.id);
        var route = tree.getRoute(node3.id);
        assert(route[0] === node2.id);
        assert(route[1] === node3.id);
        setTimeout(function() {
            done()
        }, 10)
    })

    it("#top", function(done) {
        var node4 = tree.createNode("label4");
        tree.top(node4.id);
        var ids = tree.getChildIds();
        assert(ids[0] === node4.id)
        setTimeout(function() {
            done()
        }, 10)

    })

})